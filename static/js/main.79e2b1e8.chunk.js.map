{"version":3,"sources":["contexts/TodosContext.js","components/TodoForm.js","components/TodoList.js","App.js","reportWebVitals.js","index.js"],"names":["TodosContext","createContext","TodosContextProvider","props","useState","todos","setTodos","Provider","value","addTodo","inputValue","title","isCompleted","completeTodo","index","newTodos","removeTodo","splice","children","TodoForm","useContext","setInputValue","Form","onSubmit","e","preventDefault","InputGroup","Input","type","onChange","target","InputGroupAddon","addonType","Button","color","TodoList","Table","map","todo","className","onClick","App","Container","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kTAEaA,EAAeC,0BA0BbC,EAvBc,SAACC,GAAW,IAAD,EACZC,mBAAS,IADG,mBAC/BC,EAD+B,KACxBC,EADwB,KAgBtC,OACE,cAACN,EAAaO,SAAd,CAAuBC,MAAO,CAAEH,QAAOI,QAdzB,SAACC,GAAD,OACdJ,EAAS,GAAD,mBAAKD,GAAL,CAAY,CAAEM,MAAOD,EAAYE,aAAa,OAaNC,aAZ7B,SAACC,GACpB,IAAMC,EAAQ,YAAOV,GACrBU,EAASD,GAAOF,aAAeG,EAASD,GAAOF,YAC/CN,EAASS,IASqDC,WAP7C,SAACF,GAClB,IAAMC,EAAQ,YAAOV,GACrBU,EAASE,OAAOH,EAAO,GACvBR,EAASS,KAIT,SACGZ,EAAMe,YCQEC,EA3BE,WAAO,IACdV,EAAYW,qBAAWpB,GAAvBS,QADa,EAEeL,mBAAS,IAFxB,mBAEdM,EAFc,KAEFW,EAFE,KASrB,OACE,cAACC,EAAA,EAAD,CAAMC,SAPa,SAACC,GACpBA,EAAEC,iBACFhB,EAAQC,GACRW,EAAc,KAId,SACE,eAACK,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CACEC,KAAK,OACLpB,MAAOE,EACPmB,SAAU,SAACL,GAAD,OAAOH,EAAcG,EAAEM,OAAOtB,UAE1C,cAACuB,EAAA,EAAD,CAAiBC,UAAU,SAA3B,SACE,cAACC,EAAA,EAAD,CAAQL,KAAK,SAASM,MAAM,UAA5B,kC,QCcKC,EAhCE,WAAO,IAAD,EACuBf,qBAAWpB,GAA/CK,EADa,EACbA,MAAOQ,EADM,EACNA,aAAcG,EADR,EACQA,WAE7B,OACE,cAACoB,EAAA,EAAD,UACE,gCACG/B,GACCA,EAAMgC,KAAI,SAACC,EAAMxB,GAAP,OACR,+BACE,oBAAIyB,UAAU,YAAd,SACGD,EAAK1B,YAAc,8BAAM0B,EAAK3B,QAAe2B,EAAK3B,QAErD,qBAAI4B,UAAU,aAAd,UACE,cAACN,EAAA,EAAD,CACEC,MAAOI,EAAK1B,YAAc,YAAc,UACxC2B,UAAU,OACVC,QAAS,kBAAM3B,EAAaC,IAH9B,0BAQA,cAACmB,EAAA,EAAD,CAAQC,MAAM,SAASM,QAAS,kBAAMxB,EAAWF,IAAjD,+BAbKA,WCQN2B,EAZH,kBACV,qBAAKF,UAAU,MAAf,SACE,eAACG,EAAA,EAAD,WACE,oBAAIH,UAAU,OAAd,uBACA,eAAC,EAAD,WACE,cAAC,EAAD,IACA,cAAC,EAAD,aCFOI,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.79e2b1e8.chunk.js","sourcesContent":["import React, { createContext, useState } from 'react';\n\nexport const TodosContext = createContext();\n\n// consumer component\nconst TodosContextProvider = (props) => {\n  const [todos, setTodos] = useState([]);\n\n  const addTodo = (inputValue) =>\n    setTodos([...todos, { title: inputValue, isCompleted: false }]);\n  const completeTodo = (index) => {\n    const newTodos = [...todos];\n    newTodos[index].isCompleted = !newTodos[index].isCompleted;\n    setTodos(newTodos);\n  };\n  const removeTodo = (index) => {\n    const newTodos = [...todos];\n    newTodos.splice(index, 1);\n    setTodos(newTodos);\n  };\n\n  return (\n    <TodosContext.Provider value={{ todos, addTodo, completeTodo, removeTodo }}>\n      {props.children}\n    </TodosContext.Provider>\n  );\n};\n\nexport default TodosContextProvider;\n","import React, { useContext, useState } from 'react';\nimport { Button, Form, Input, InputGroup, InputGroupAddon } from 'reactstrap';\nimport { TodosContext } from '../contexts/TodosContext';\n\nconst TodoForm = () => {\n  const { addTodo } = useContext(TodosContext);\n  const [inputValue, setInputValue] = useState('');\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    addTodo(inputValue);\n    setInputValue('');\n  };\n\n  return (\n    <Form onSubmit={handleSubmit}>\n      <InputGroup>\n        <Input\n          type=\"text\"\n          value={inputValue}\n          onChange={(e) => setInputValue(e.target.value)}\n        />\n        <InputGroupAddon addonType=\"append\">\n          <Button type=\"submit\" color=\"primary\">\n            追加\n          </Button>\n        </InputGroupAddon>\n      </InputGroup>\n    </Form>\n  );\n};\n\nexport default TodoForm;\n","import React, { useContext } from 'react';\nimport { Button, Table } from 'reactstrap';\nimport { TodosContext } from '../contexts/TodosContext';\n\nconst TodoList = () => {\n  const { todos, completeTodo, removeTodo } = useContext(TodosContext);\n\n  return (\n    <Table>\n      <tbody>\n        {todos &&\n          todos.map((todo, index) => (\n            <tr key={index}>\n              <th className=\"text-left\">\n                {todo.isCompleted ? <del>{todo.title}</del> : todo.title}\n              </th>\n              <td className=\"text-right\">\n                <Button\n                  color={todo.isCompleted ? 'secondary' : 'success'}\n                  className=\"mr-2\"\n                  onClick={() => completeTodo(index)}\n                >\n                  完了\n                </Button>\n\n                <Button color=\"danger\" onClick={() => removeTodo(index)}>\n                  削除\n                </Button>\n              </td>\n            </tr>\n          ))}\n      </tbody>\n    </Table>\n  );\n};\n\nexport default TodoList;\n","import React from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\nimport { Container } from 'reactstrap';\nimport TodoForm from './components/TodoForm';\nimport TodoList from './components/TodoList';\nimport TodosContextProvider from './contexts/TodosContext';\n\nconst App = () => (\n  <div className=\"App\">\n    <Container>\n      <h1 className=\"mt-4\">Todo List</h1>\n      <TodosContextProvider>\n        <TodoForm />\n        <TodoList />\n      </TodosContextProvider>\n    </Container>\n  </div>\n);\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}